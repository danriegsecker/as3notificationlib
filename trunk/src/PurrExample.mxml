<?xml version="1.0" encoding="utf-8"?>
<mx:WindowedApplication xmlns:mx="http://www.adobe.com/2006/mxml" creationComplete="onCreationComplete()" layout="absolute">
	<mx:Script>
		<![CDATA[
			import com.adobe.air.notification.NotificationClickedEvent;
			import com.adobe.air.notification.Purr;
			import com.adobe.air.notification.AbstractNotification;
			import com.adobe.air.notification.Notification;

			private const iconURL: String = "AIR_logo.png";
			private var bmp: Bitmap = null;
			private var count:uint;
			private var timer:Timer;
			private var purr:Purr = new Purr(1);

			private function onCreationComplete():void
			{

	            var loader: Loader = new Loader();
	            loader.contentLoaderInfo.addEventListener(Event.COMPLETE, completeHandler);
	            loader.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);

	            var request: URLRequest = new URLRequest(iconURL);
	            loader.load(request);
	            
	            timer = new Timer(3000, 1);
				timer.addEventListener(TimerEvent.TIMER,
					function(e:TimerEvent):void
					{
						purr.alert(alertType.selectedLabel, Shell.shell.activeWindow);
					});
			}

	        private function completeHandler(event:Event):void
	        {
	        	bmp = Bitmap(Loader(event.target.loader).content);
				purr.setIcons([bmp.bitmapData], "This is tooltip");
				var m: NativeMenu = new NativeMenu();
				m.addItem(new NativeMenuItem('Menu Item 1'));
				m.addItem(new NativeMenuItem('Menu Item 2'));
				purr.setMenu(m);
	        }

	        private function ioErrorHandler(event:IOErrorEvent):void
	        {
	            trace("Unable to load image: " + iconURL);
	        }

			private function addNotification(where:String):void
			{
				var title:String = "This is a title";
				var message:String = "This is a message #" + (++count);
				var msg: String = message;
				var icon:Bitmap = (showIcon.selected) ? bmp : null;
				if (noEvents.selected)
				{
					purr.addTextNotificationByParams(title, message, where, 5, icon);
				}
				else
				{
					var n:Notification = new Notification(title, message, where, 5, icon);
					n.id = String(count);
					n.addEventListener(NotificationClickedEvent.NOTIFICATION_CLICKED_EVENT,
						function(e:NotificationClickedEvent):void
						{
							trace("You clicked on notification: " + AbstractNotification(e.target).id);
						});
					purr.addNotification(n);
				}
			}

			private function alert():void
			{
				timer.start();
			}

			private function pause():void
			{
				pauseButton.enabled = false;
				resumeButton.enabled = true;
				this.purr.pause();
			}

			private function resume():void
			{
				pauseButton.enabled = true;
				resumeButton.enabled = false;
				this.purr.resume();
			}

		]]>
	</mx:Script>
	<mx:Button click="addNotification(AbstractNotification.TOP_LEFT)" label="Top Left" top="2" left="2"/>
	<mx:Button click="addNotification(AbstractNotification.TOP_RIGHT)" label="Top Right" top="2" right="2"/>
	<mx:Button click="addNotification(AbstractNotification.BOTTOM_RIGHT)" label="Bottom Right" right="2" bottom="2"/>
	<mx:Button click="addNotification(AbstractNotification.BOTTOM_LEFT)" label="Bottom Left" left="2" bottom="2"/>
	<mx:Box width="100%" height="100%" verticalAlign="middle" horizontalAlign="center">
		<mx:VBox>
			<mx:HBox>
				<mx:ComboBox id="alertType">
					<mx:dataProvider>
						<mx:Array>
							<mx:String>{NotificationType.INFORMATIONAL}</mx:String>
							<mx:String>{NotificationType.CRITICAL}</mx:String>
						</mx:Array>
					</mx:dataProvider>
				</mx:ComboBox>
				<mx:Button label="Alert in 3 seconds" click="alert();"/>
			</mx:HBox>
		</mx:VBox>
		<mx:Button id="pauseButton" label="Pause" click="pause();"/>
		<mx:Button id="resumeButton" label="Resume" click="resume()" enabled="false"/>
		<mx:Grid>
			<mx:GridRow>
				<mx:GridItem>
					<mx:CheckBox id="showIcon" label="Show icon" selected="true"/>
				</mx:GridItem>
			</mx:GridRow>
			<mx:GridRow>
				<mx:GridItem>
					<mx:RadioButton groupName="getEvents" id="yesEvents" label="Capture click event" selected="true"/>
				</mx:GridItem>
			</mx:GridRow>
			<mx:GridRow>
				<mx:GridItem>
					<mx:RadioButton groupName="getEvents" id="noEvents" label="Don't capture click event"/>
				</mx:GridItem>
			</mx:GridRow>
		</mx:Grid>
		
	</mx:Box>
</mx:WindowedApplication>
